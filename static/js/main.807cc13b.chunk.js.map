{"version":3,"sources":["store/index.ts","api.js","App.tsx","index.tsx"],"names":["finishLoading","message","type","setSortField","sortField","getMessage","state","getStateTodos","todos","getState","getLoading","loading","getLoaded","loaded","initialState","store","createStore","action","map","todo","user","users","find","item","userId","id","filter","composeWithDevTools","Url","App","dispatch","useDispatch","useSelector","sortedTodos","sort","a","b","localeCompare","getSortedTodos","todosFromState","todoCache","loadTodosFromServer","fetch","then","response","json","undefined","length","className","role","onClick","completed","style","maxWidth","name","title","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.807cc13b.chunk.js","sourcesContent":["import { createStore, AnyAction } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { Todo, User } from '../interface';\n\nexport const getSortedTodos: any = ({ todos, sortField }: any) => {\n  const sortedTodos = [...todos];\n\n\n  switch (sortField) {\n    case 'name':\n      sortedTodos.sort((a: any, b: any): any => a.user[sortField].localeCompare(b.user[sortField]));\n      break;\n\n    case 'title':\n      sortedTodos.sort((a: any, b: any): any => a[sortField].localeCompare(b[sortField]));\n      break;\n\n    case 'completed':\n      sortedTodos.sort((a: any, b: any): any => +a[sortField] - +b[sortField]);\n      break;\n\n    case 'id':\n      sortedTodos.sort((a: any, b: any): any => a[sortField] - b[sortField]);\n      break;\n\n    default:\n      break;\n  }\n\n  return sortedTodos;\n};\n\nconst START_LOADING = 'START_LOADING';\nconst FINISH_LOADING = 'FINISH_LOADING';\nconst SET_TODOS = 'SET_TODOS';\nconst IS_LOADED = 'IS_LOADED';\nconst SORT_BY = 'SORT_BY';\nconst KILL = 'KILL';\n\n// ActionCreators\nexport const setTodos = ({ users, todos }: any) => ({\n  type: SET_TODOS,\n  users,\n  todos,\n});\nexport const finishLoading = (message: string) => ({\n  type: FINISH_LOADING,\n  message,\n});\nexport const setSortField = (sortField: string) => ({ type: SORT_BY, sortField });\nexport const killTodo = (id: number) => ({ type: KILL, id });\nexport const setLoaded = () => ({ type: IS_LOADED });\nexport const startLoading = () => ({ type: 'START_LOADING' });\n\n// Selectors\nexport const getMessage = (state: RootState) => state.message;\nexport const getStateTodos = (state: RootState) => state.todos;\nexport const getState = (state: RootState) => state;\nexport const getLoading = (state: RootState) => state.loading;\nexport const getLoaded = (state: RootState) => state.loaded;\n\n\nexport type RootState = {\n  loading: boolean;\n  message: string;\n  todos: Todo[];\n  loaded: boolean;\n  sortField: string;\n};\n\nconst initialState: RootState = {\n  loading: false,\n  message: '',\n  todos: [],\n  loaded: false,\n  sortField: 'id',\n};\n\nconst rootReducer = (state = initialState, action: AnyAction) => {\n  switch (action.type) {\n    case START_LOADING:\n      return { ...state, loading: true };\n\n    case FINISH_LOADING:\n      return {\n        ...state,\n        loading: false,\n        message: action.message,\n      };\n    case SET_TODOS:\n      return {\n        ...state,\n        todos: action.todos.map((todo: Todo) => ({\n          ...todo,\n          user: action.users.find((item: User) => todo.userId === item.id),\n        })),\n      };\n    case IS_LOADED:\n      return {\n        ...state,\n        loaded: true,\n      };\n    case SORT_BY:\n      return {\n        ...state,\n        sortField: action.sortField,\n      };\n    case KILL:\n      return {\n        ...state,\n        todos: state.todos.filter(item => action.id !== item.id),\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(),\n);\n\nexport default store;\n","const Url = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api/';\n\nexport const getTodos = () => {\n  return fetch(`${Url}todos.json`).then(response => response.json());\n};\n\nexport const getUsers = () => {\n  return fetch(`${Url}users.json`).then(response => response.json());\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport './App.scss';\n\nimport { getTodos, getUsers } from './api';\nimport {\n  getSortedTodos,\n  setTodos,\n  setSortField,\n  killTodo,\n  setLoaded,\n  finishLoading,\n  startLoading,\n  getMessage,\n  getState,\n  getStateTodos,\n  getLoading,\n  getLoaded,\n} from './store';\n\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const message = useSelector(getMessage);\n  const sortedTodos = getSortedTodos(useSelector(getState));\n  const todosFromState = useSelector(getStateTodos);\n  const loading = useSelector(getLoading);\n  const loaded = useSelector(getLoaded);\n\n  let todoCache: any = [];\n\n  const loadTodosFromServer = async () => {\n    dispatch(startLoading());\n\n    try {\n      const todos = await getTodos();\n      const users = await getUsers();\n\n      dispatch(setTodos({ todos, users }));\n      dispatch(finishLoading(message));\n      dispatch(setLoaded());\n    } catch (error) {\n      dispatch(finishLoading(message));\n    }\n  };\n\n  if (sortedTodos !== undefined && sortedTodos.length >= 1) {\n    todoCache = [...sortedTodos];\n  } else {\n    todoCache = [...todosFromState];\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Redux list of todos</h1>\n      <h2>\n        {loading\n          ? (\n            <div className=\"spinner-border text-primary\" role=\"status\">\n              <span className=\"sr-only\">Loading...</span>\n            </div>\n          )\n          : message}\n      </h2>\n\n      {loaded\n        && (\n          <>\n            <button\n              type=\"button\"\n              onClick={() => dispatch(setSortField('title'))}\n              className=\"btn btn-primary\"\n            >\n              sortBytitle\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={() => dispatch(setSortField('name'))}\n              className=\"btn btn-primary\"\n            >\n              sortByname\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={() => dispatch(setSortField('completed'))}\n              className=\"btn btn-primary\"\n            >\n              sortByCompleted\n            </button>\n          </>\n        )}\n\n      {!loaded\n        && (\n          <button\n            type=\"button\"\n            className=\"btn btn-primary\"\n            onClick={loadTodosFromServer}\n          >\n            {loading ? 'Loading...' : 'Load'}\n          </button>\n        )}\n\n      {loaded && (\n        <ul>\n          {todoCache.map((item: any) => (\n            <div\n              className={item.completed\n                ? 'card text-white bg-success mb-3'\n                : 'card text-white bg-danger mb-3'}\n              style={{ maxWidth: '18rem' }}\n            >\n              <div className=\"card-header\">\n                {item.user.name}\n                <button type=\"button\" onClick={() => dispatch(killTodo(item.id))}>X</button>\n              </div>\n              <div className=\"card-body\">\n                <h5 className=\"card-title\">{item.title}</h5>\n              </div>\n            </div>\n          ))}\n        </ul>\n      )}\n\n    </div>\n  );\n};\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport store from './store';\nimport App from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}